
# name: Liquibase Multi-Env CI
 
# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         description: 'Target Environment'
#         required: true
#         default: 'dev'
#         type: choice
#         options:
#           - dev
#           - sit
#           - uat
 
# jobs:
#   liquibase-deploy:
#     runs-on: self-hosted
 
    # env:
    #   LIQUIBASE_VERSION: 4.24.0
    #   ENV: ${{ github.event.inputs.environment }}
 
    # steps:
    #   - name: Checkout Code
    #     uses: actions/checkout@v4
 
    #   - name: Set up Java
    #     uses: actions/setup-java@v4
    #     with:
    #       distribution: 'temurin'
    #       java-version: '17'

      # - name: Install unzip (required for Liquibase)
      #   run: sudo apt-get update && sudo apt-get install -y unzip
 
      # - name: Install Liquibase
      #   run: |
      #     curl -sL https://github.com/liquibase/liquibase/releases/download/v${LIQUIBASE_VERSION}/liquibase-${LIQUIBASE_VERSION}.tar.gz 
      #     unzip -o liquibase.zip -d liquibase
      #     chmod +x liquibase/liquibase
      #     echo "${GITHUB_WORKSPACE}/liquibase" >> $GITHUB_PATH
      #     sudo mv liquibase /usr/local/bin/liquibase

      # - name: Download and Install Liquibase
      #   run: |
      #     curl -sL https://github.com/liquibase/liquibase/releases/latest/download/liquibase.zip -o liquibase.zip
      #     unzip -o liquibase.zip -d liquibase
      #     chmod +x liquibase/liquibase
      #     echo "${GITHUB_WORKSPACE}/liquibase" >> $GITHUB_PATH

      # - name: Verify Liquibase Installation
      #   run: liquibase/liquibase --version

      # - name: Run Liquibase Validate
      #   run: |
      #     liquibase && \
      #       --defaultsFile=liquibase/${ENV}/liquibase.properties && \
      #       --changeLogFile=liquibase/changelog.xml && \
      #       --logLevel=info \
      #     validate        
 
      # - name: Dry Run SQL
      #   run: |
      #     liquibase \
      #       --defaultsFile=liquibase/${ENV}/liquibase.properties \
      #       --changeLogFile=liquibase/changelog.xml \
      #       --logLevel=info \
      #     updateSQL              
          
      # - name: Update Database
      #   run: |
      #     liquibase \
      #       --defaultsFile=liquibase/${ENV}/liquibase.properties \
      #       --changeLogFile=liquibase/changelog.xml \
      #       --logLevel=info \
      #     update  
 

name: Liquibase CI Pipeline
 
on:
  push:
    branches: [main]
  pull_request:
    #branches: [main]
 
jobs:
  liquibase-ci:
    runs-on: self-hosted
      
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up JDK
          uses: actions/setup-java@v2
          with:
            java-version: '11'  # Specify the Java version
            distribution: 'adopt'

        - name: Install Liquibase
          run: |
            curl -Lo liquibase.zip https://github.com/liquibase/liquibase/releases/latest/download/liquibase-4.10.0.zip
            unzip liquibase.zip -d liquibase
            echo "Liquibase installed successfully."
  
    # env:
    #   LIQUIBASE_VERSION: 4.24.0
    #   DB_URL: jdbc:mysql://34.227.26.61:3306/testDB
    #   DB_USERNAME: ${{ secrets.DB_USERNAME }}
    #   DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    #   CHANGELOG_FILE: changelog.xml
 
    # steps:
    #   - name: Checkout Repository
    #     uses: actions/checkout@v4
 
    #   - name: Set up Java
    #     uses: actions/setup-java@v4
    #     with:
    #       distribution: 'temurin'
    #       java-version: '17'
 
    #   - name: Install Liquibase
    #     run: |
    #       curl -L https://github.com/liquibase/liquibase/releases/download/v${LIQUIBASE_VERSION}/liquibase-${LIQUIBASE_VERSION}.tar.gz | tar xz
    #       sudo mv liquibase /usr/local/bin/liquibase
 
      #- name: Validate Changelog
      #  run: liquibase --url=$DB_URL --username=$DB_USERNAME --password=$DB_PASSWORD --changeLogFile=$CHANGELOG_FILE validate
 
      # - name: Dry Run Update SQL
      #   run: liquibase --url=$DB_URL --username=$DB_USERNAME --password=$DB_PASSWORD --changeLogFile=$CHANGELOG_FILE updateSQL
 
      # - name: Update Database (Non-Prod)
      #   if: github.ref == 'refs/heads/main'
      #   run: liquibase --url=$DB_URL --username=$DB_USERNAME --password=$DB_PASSWORD --changeLogFile=$CHANGELOG_FILE update
 
      # - name: Tag Release (Optional)
      #   if: github.ref == 'refs/heads/main'
      #   run: |
      #     git tag "liquibase-release-$(date +'%Y%m%d%H%M%S')"
      #     git push origin --tags
 
      # - name: Notify Slack (Optional)
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     payload: '{"text":"Liquibase update completed successfully!"}'
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}     